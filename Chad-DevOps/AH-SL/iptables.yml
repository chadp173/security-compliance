
Skip to content
Enterprise
Pull requests
Issues
Explore
@Chad-Perry1
NetEngTools /
ant-sre-infra-automation
Private

8
0

    0

Code
Issues 0
Pull requests 9
ZenHub
Projects 0
Wiki

    Insights

ant-sre-infra-automation/infrastructure/setup-vm-iptables-configure.yml
@mariusz-pajecki mariusz-pajecki Update setup-vm-iptables-configure.yml d84a43b on Feb 5, 2020
@mariusz-pajecki
@Pranjali-B
158 lines (117 sloc) 6.33 KB
---

- name: Apply IPTables rules.
  hosts: '{{ TARGET }}'
  remote_user: '{{ USER }}'

  handlers:
    - include: handlers/main.yml

  tasks:
    - name: Apply Iptables rules
      shell: |
        ## Set default policy and flush current rules
        iptables -P INPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables -F
        ## SYNLIMIT Chain # Limit Essential Services like HTTP/FTP
        #iptables -N SYNLIMIT
        #iptables -A SYNLIMIT -p tcp –-syn -m limit --limit 10/second -j LOGNEW
        ## LOGNEW CHAIN # Track New Connections Inbound
        iptables -N LOGNEW
        iptables -A LOGNEW -j LOG --log-prefix  "IPT_CONN_NEW: " --log-level 4
        iptables -A LOGNEW -j ACCEPT
        ## LOGNDROP Chain
        iptables -N LOGNDROP
        iptables -A LOGNDROP -j LOG –-log-prefix "IPT_CONN_DROP:"
        iptables -A LOGNDROP -j ACCEPT
        ## Allow loopback connections
        iptables -A INPUT -i lo -j ACCEPT
        iptables -A OUTPUT -o lo -j ACCEPT
        ## Allow Established,Relate IN/OUT
        iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
        iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
        iptables -A OUTPUT -m state --state NEW -j ACCEPT
        # ICMP
        ## From Nagios in 9.45.203.182
        ##https://github.ibm.com/NetEngTools/Delivery/issues/601
        iptables -A INPUT -p icmp -s 9.0.0.0/8 -j ACCEPT
        #iptables -A INPUT -p icmp -s 9.45.203.0/24 -j ACCEPT
        #iptables -A INPUT -p icmp -s 9.207.131.0/24 -j ACCEPT
        #iptables -A INPUT -p icmp -s 9.207.194.0/24 -j ACCEPT
        #iptables -A INPUT -p icmp -s 9.207.195.0/24 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.0.0.0/8  --match multiport --dports 22,80:99,443,5000,5001,8080:8099,8350:8360,9000:9020,35357,35358,50001 -j ACCEPT
        ## Workaround for local DB connection
        iptables -A INPUT -p tcp -s 172.0.0.0/8 --dport 50001 -j ACCEPT
        ## Allow Jenkins JNLP
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 50000 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 50000 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 50000 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 3306 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 3306 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 3306 -j ACCEPT
        ## MysqlDB container
        iptables -I DOCKER-USER -p tcp --dport 3306 -j ACCEPT
        iptables -I DOCKER-USER -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 25 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 25 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 25 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --match multiport --dports 2375:2376 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --match multiport --dports 2375:2376 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --match multiport --dports 2375:2376 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 8500 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 8500 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 8500 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 8300 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 8300 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 8300 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 8200 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 8200 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 8200 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --match multiport --dports 8300:8302 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --match multiport --dports 8300:8302 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --match multiport --dports 8300:8302 -j ACCEPT
        ## Nagios Client
        iptables -A INPUT -p tcp -s 9.207.131.0/24 --dport 5693 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.194.0/24 --dport 5693 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.207.195.0/24 --dport 5693 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.45.203.0/24  --dport 5693 -j ACCEPT
        ##TODO - testing Tower setup
        iptables -A INPUT -p udp -s 9.0.0.0/24 --dport 67 -j ACCEPT
        iptables -A INPUT -p tcp -s 9.0.0.0/24 --dport 68 -j ACCEPT
        ##TODO - rabbimq - 4369?
        iptables -A INPUT -p tcp -s 9.0.0.0/24 --dport 4369 -j ACCEPT
        ## TODO - Docker ports not working (slave cannot be re-created)
        iptables -I DOCKER-USER -p tcp --dport 2375 -j ACCEPT
        iptables -I DOCKER-USER -j ACCEPT
        iptables -A DOCKER  -j ACCEPT
        iptables -A INPUT -i docker0 -j ACCEPT
        iptables -A OUTPUT -o docker0 -j ACCEPT
        ## Testing FORWARD for Docker - note hardcoded interface ens192 vs eth?
        ## ====================================================================
        iptables -A FORWARD -i docker0 -o ens192 -j ACCEPT
        iptables -A FORWARD -i ens192 -o docker0 -m state  --state RELATED,ESTABLISHED -j ACCEPT
        iptables -A DOCKER  -j ACCEPT
        ## Testing open FW
        #iptables -A INPUT  -j ACCEPT
        #iptables -A OUTPUT  -j ACCEPT
        ## Enable logging
        iptables -N LOGGING
        iptables -A INPUT -j LOGGING
        iptables -A LOGGING -m limit --limit 2/min -j LOG --log-prefix "IPTables-Dropped: " --log-level 4
        iptables -A LOGGING -j DROP
        # Last rules
        iptables -P INPUT DROP
        iptables -P FORWARD DROP
        iptables -P OUTPUT DROP
        ## Last rule
        #iptables -A OUTPUT -j REJECT
        ## To save on reboot:
        iptables-save >/etc/iptables.rules
        iptables-save
        ## Make sure the iptables rules stays after reboot
        sed -i 's/IPTABLES_SAVE_ON_RESTART="no"/IPTABLES_SAVE_ON_RESTART="yes"/g' /etc/sysconfig/iptables-config
        sed -i 's/IPTABLES_SAVE_ON_STOP="no"/IPTABLES_SAVE_ON_STOP="yes"/g' /etc/sysconfig/iptables-config
      args:
        executable: /bin/bash

        ## TODO - control restart as an option using TAG?
        # Skip Docker restart on live systems (emergency Iptables rule addition for Nagios alerting)
      notify: restart_docker_service

    © 2021 GitHub, Inc.
    Help
    Support

    API
    Training
    Blog
    About

GitHub Enterprise Server 2.21.19
